{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\torre\\\\Documents\\\\ReactApp\\\\reactpractice\\\\src\\\\components\\\\CardBody.js\";\nimport React from \"react\"; // If we want a child component to update or pass data to its parent, we can create a method inside the parent for the update\n// Then bind the method to the parent, and pass it to the child as a prop\n\nvar CardBody = function CardBody(props) {\n  return React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Click Count: \", props.count), React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: props.handleIncrement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Increment\"), \" \", React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: props.handleDecrement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Decrement\"));\n};\n\nexport default CardBody;","map":{"version":3,"sources":["c:\\Users\\torre\\Documents\\ReactApp\\reactpractice\\src\\components\\CardBody.js"],"names":["React","CardBody","props","count","handleIncrement","handleDecrement"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SACpB;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAuCA,KAAK,CAACC,KAA7C,CADF,EAEE;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAED,KAAK,CAACE,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAIY,GAJZ,EAKE;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAmC,IAAA,OAAO,EAAEF,KAAK,CAACG,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADoB;AAAA,CAAtB;;AAYA,eAAeJ,QAAf","sourcesContent":["import React from \"react\";\n\n// If we want a child component to update or pass data to its parent, we can create a method inside the parent for the update\n// Then bind the method to the parent, and pass it to the child as a prop\n\nconst CardBody = props => (\n  <div className=\"card-body\">\n    <p className=\"card-text\">Click Count: {props.count}</p>\n    <button className=\"btn btn-primary\" onClick={props.handleIncrement}>\n      Increment\n    </button>{\" \"}\n    <button className=\"btn btn-danger\" onClick={props.handleDecrement}>\n      Decrement\n    </button>\n  </div>\n);\n\nexport default CardBody;\n"]},"metadata":{},"sourceType":"module"}