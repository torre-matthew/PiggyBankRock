{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\torre\\\\Documents\\\\bootcamp\\\\ReactGame\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\torre\\\\Documents\\\\bootcamp\\\\ReactGame\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\torre\\\\Documents\\\\bootcamp\\\\ReactGame\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\torre\\\\Documents\\\\bootcamp\\\\ReactGame\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\torre\\\\Documents\\\\bootcamp\\\\ReactGame\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\torre\\\\Documents\\\\bootcamp\\\\ReactGame\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Nav from \"./components/nav\";\nimport ToyDisplay from \"./components/toysDisplay\";\nimport MoneyDisplay from \"./components/moneyDisplay\";\nimport ToyDisplayBodyWrapper from \"./components/toydisplaybodywrapper\";\nimport MoneyDisplayBodyWrapper from \"./components/moneydisplaybodywrapper\";\nimport toys from \"./toys.js\";\nimport money from \"./money.js\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      moneyInBank: [],\n      toyDisplayOrder: [],\n      moneyInBankVal: 0,\n      message: \"\",\n      correct: 0,\n      incorrect: 0\n    };\n\n    _this.selectNewObject = function () {\n      var index = Math.floor(Math.random() * (money.length - 0) + 0);\n\n      _this.setState({\n        moneyInBank: money[index].moneyimgs,\n        moneyInBankVal: money[index].value,\n        toyDisplayOrder: _this.shuffle(toys)\n      });\n    };\n\n    _this.compareToyPriceToDollarValue = function (toyValue) {\n      var currentCorrectCount = _this.state.correct;\n      var currentIncorrectCount = _this.state.incorrect;\n      var currentMoneyAvailable = _this.state.moneyInBankVal;\n\n      if (toyValue === currentMoneyAvailable) {\n        _this.setState({\n          message: \"Yay! That's right!\"\n        });\n\n        _this.selectNewObject();\n\n        currentCorrectCount++;\n\n        _this.setState({\n          correct: currentCorrectCount\n        });\n      } else {\n        _this.setState({\n          message: \"Whoops! Try again!!\"\n        });\n\n        _this.selectNewObject();\n\n        currentIncorrectCount++;\n\n        _this.setState({\n          incorrect: currentIncorrectCount\n        });\n\n        _this.startGameOver();\n      }\n    };\n\n    _this.startGameOver = function () {\n      if (_this.state.incorrect > 1) {\n        _this.setState({\n          correct: 0,\n          incorrect: 0\n        });\n      }\n    };\n\n    _this.shuffle = function (array) {\n      var currentIndex = array.length,\n          temporaryValue,\n          randomIndex; // While there remain elements to shuffle...\n\n      while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1; // And swap it with the current element.\n\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.selectNewObject();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        message: this.state.message,\n        correct: this.state.correct,\n        incorrect: this.state.incorrect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(MoneyDisplayBodyWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.moneyInBank.map(function (moneyimgs) {\n        return React.createElement(MoneyDisplay, {\n          images: moneyimgs,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        });\n      })), React.createElement(ToyDisplayBodyWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.state.toyDisplayOrder.map(function (toy) {\n        return React.createElement(ToyDisplay, {\n          key: toy.id,\n          image: toy.image,\n          cost: toy.cost,\n          compareToyPriceToDollarValue: _this2.compareToyPriceToDollarValue,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["c:\\Users\\torre\\Documents\\bootcamp\\ReactGame\\src\\App.js"],"names":["React","Component","Nav","ToyDisplay","MoneyDisplay","ToyDisplayBodyWrapper","MoneyDisplayBodyWrapper","toys","money","App","state","moneyInBank","toyDisplayOrder","moneyInBankVal","message","correct","incorrect","selectNewObject","index","Math","floor","random","length","setState","moneyimgs","value","shuffle","compareToyPriceToDollarValue","toyValue","currentCorrectCount","currentIncorrectCount","currentMoneyAvailable","startGameOver","array","currentIndex","temporaryValue","randomIndex","map","toy","id","image","cost"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Nav from \"./components/nav\";\nimport ToyDisplay from \"./components/toysDisplay\";\nimport MoneyDisplay from \"./components/moneyDisplay\";\nimport ToyDisplayBodyWrapper from \"./components/toydisplaybodywrapper\";\nimport MoneyDisplayBodyWrapper from \"./components/moneydisplaybodywrapper\";\nimport toys from \"./toys.js\";\nimport money from \"./money.js\";\n\n\nclass App extends Component {\n\n  state = {\n    moneyInBank: [],\n    toyDisplayOrder: [],\n    moneyInBankVal: 0,\n    message: \"\",\n    correct: 0,\n    incorrect: 0,\n  }\n\n  selectNewObject = () => {\n    let index = Math.floor(Math.random() * (money.length - 0) + 0);\n    this.setState({\n      moneyInBank: money[index].moneyimgs,\n      moneyInBankVal: money[index].value,\n      toyDisplayOrder: this.shuffle(toys)\n    });\n}\n\ncomponentDidMount() {\n  this.selectNewObject();\n}\n\ncompareToyPriceToDollarValue = (toyValue) => {\n  let currentCorrectCount = this.state.correct;\n  let currentIncorrectCount = this.state.incorrect;\n  let currentMoneyAvailable = this.state.moneyInBankVal;\n  \n  if (toyValue === currentMoneyAvailable) {\n    this.setState({message: \"Yay! That's right!\"});\n    this.selectNewObject();\n    currentCorrectCount++;\n    this.setState({correct: currentCorrectCount});\n\n  } else {\n    this.setState({message: \"Whoops! Try again!!\"});\n    this.selectNewObject();\n    currentIncorrectCount++;\n    this.setState({incorrect: currentIncorrectCount});\n    this.startGameOver();\n  }\n}\n\n  startGameOver = () => {\n    if (this.state.incorrect > 1) {\n      this.setState({correct: 0, incorrect: 0});\n    }\n  }\n\n  shuffle = (array) => {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n  }\n    \n  render() {\n    return (\n      <div>     \n        <Nav \n        message={this.state.message}\n        correct={this.state.correct}\n        incorrect={this.state.incorrect}\n        />\n        <MoneyDisplayBodyWrapper> \n          {this.state.moneyInBank.map(moneyimgs =>     \n            <MoneyDisplay \n            images={ moneyimgs }\n            />\n          )}\n        </MoneyDisplayBodyWrapper>\n        <ToyDisplayBodyWrapper>\n          {this.state.toyDisplayOrder.map(toy =>       \n            <ToyDisplay\n            key={toy.id}\n            image={toy.image}\n            cost={toy.cost}\n            compareToyPriceToDollarValue={this.compareToyPriceToDollarValue}\n            />\n          )}\n        </ToyDisplayBodyWrapper> \n      </div>\n    )\n  }  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}